
DOLOAD
	CLR	@RET
	; send pab
FILELOOP
	LI	R0,10
	LI	R1,VDPPAB
	BL	@vsendmsg
	; send device and file name
	LI	R0,VDPPAB+9
	.setvdpra R0
	CLR	R0
	MOVB	@VDPRD,R0
	SWPB	R0
	LI	R1,VDPPAB+10
	BL	@vsendmsg

	; get success or error code
	STWP	R10
	LI	R0,1
	MOV	R10,R1
	CLR	R9
	AI	R1,R9LB
	BL	@recvmsg
	CI	R9,SUCCESS	; If PI returns success
	JEQ	GETDATA		;  jump to look at header
	JMP	LOADERR		;  otherwise error out

GETDATA
	; load the next stream into the VDP buffer
	LI	R0,8198
	LI	R1,VDPADR
	BL	@vrecvmsg
	
	; We loaded a file! Now we have to get the header and process it
	LI	R0,R3MB		; destination will be R3, R4, R5
	A	R10,R0
	LI	R1,VDPADR
	LI	R2,6
	BLWP	@VMBR		; copy continuation flag into R3
				; copy data size to R4
				; copy target address to R5

	MOV	@RET,@RET	; just test for zero.
	JNE	SKIPADDR
	MOV	R5,@RET

SKIPADDR
	; now copy the file data to CPU ram
	MOV	R5,R0
	LI	R1,VDPADR+6
	MOV	R4,R2
	BLWP	@VMBR		; program data is loaded for this file

	MOV	R3,R3		; If continuation flag set,
	JNE	INCPABNAM	;  then loop to next file

	MOV	@RET,@GPLWS+R4MB	; store EA5 launch address

	JMP	OPT5		; setup the ea5 environment, and launch

INCPABNAM
	LI	R0,VDPPAB	; reset PAB for this file
	LI	R1,PAB
	LI	R2,8
	BLWP	@VMBW
	
	; Need to add 1 to last character in filename
	LI	R0,VDPPAB+9	; R0 is VDP addr of name length
	.setvdpra R0
	CLR	R1		; clear R1
	MOVB	@VDPRD,R1	; read length to R1_MSB
	SWPB	R1		; move length to LSB
	A	R1,R0		; now R0 is last character in name
	.setvdpra R0
	CLR	R1
	MOVB	@VDPRD,R1	; get the last character in R1_MSB
	AI	R1,>0100	;   inc MSB by 1
	.setvdpwa R0
	MOVB	R1,@VDPWD	; Write new character to PAB
	JMP	FILELOOP

LOADERR
	; just reset the console by falling through here.
	BLWP	@>0000		reset console otherwise

PAB
	DATA	OPLOAD 		opcode for load
	DATA	VDPADR 		destination address in vdp
	DATA	>0000 		not required for load operation
	DATA	8198 		max number of bytes to load
	DATA	>000F 		last byte=length byte
		

